<?php
/**
 * Created by PhpStorm.
 * User: aquilax
 * Date: 2/25/14
 * Time: 4:37 PM
 */


class ArtistScraper extends BaseScraper {

	const INDEX_NAME = 'lyrics';
	const TYPE_NAME = 'artist';

	public function processArticle( Article $article ) {
		$artistData = [
			'index' => self::INDEX_NAME,
			'type' => self::TYPE_NAME,
			'article_id' => $article->getId(),
			'name' => $article->getTitle()->getText()
		];
		$artistData = array_merge( $artistData, $this->getHeader( $article ) );
		$artistData = array_merge( $artistData, $this->getFooter( $article ) );

		$artist = new Artist( $this->esClient );
		$artistData['id'] = $artist->save( $artistData );
		$albums = $this->getAlbums( $article, $artistData );
	}

	protected function getHeader( Article $article ) {
		return $this->getTemplateValues( 'ArtistHeader', $article->getContent() );
	}

	protected function getFooter( Article $article ) {
		return $this->getTemplateValues( 'ArtistFooter', $article->getContent() );
	}

	function getAlbums( Article $article,  $artistData) {
		$albums = [];
		$text = $article->getContent();
		$re_albums = '#==(.*?)==\s+(.*?)\{\{clear\}\}#s';
		if ( preg_match_all( $re_albums, $text, $matches) ) {
			for ( $i = 0; $i < count($matches[0]); $i++ ) {
				$albumData = $this->getAlbumNameYear( $matches[1][$i] );
				$albumData['pic'] = $this->getAlbumPic( $matches[2][$i], $artistData['name'] );
				$album = new Album( $this->esClient );
				$albumData['id'] = $album->save( $albumData );
			}
		}
	}

	protected function getAlbumPic( $section, $artistName ) {
		$values = $this->getTemplateValues( 'Album Art', $section, '|', false );
		if ( !$values) {
			// No image
			return '';
		}
		if ( count( $values ) == 3 && $values[1] == '' ) {
			// Autogenerated image name
			// TODO: Check if this is correct
			return sprintf( '%s - %s.jpg', $artistName, $values[2] );
		}
		// Full File Name
		return $values[1];
	}

}
