<?php

namespace Wikia\TemplateClassification;

class View {

	/**
	 * Returns HTML with Template type and entry point for edit
	 * @param int $articleId
	 * @param \User $user
	 * @param string $fallbackMsg
	 * @return string
	 */
	public function renderEditableType( $articleId, $user, $fallbackMsg ) {
		$templateType = $this->getTemplateType( $articleId );
		if ( $user->isLoggedIn() ) {
			$templateType .= $this->renderEditButton();
			return $templateType;
		} else {
			if ( $this->isTemplateClassified() ) {
				return $templateType;
			}
			return $fallbackMsg;
		}
	}

	/**
	 * Mock for frontend work
	 */
	private function getTemplateType( $articleId ) {
		$response = \F::app()->sendRequest( 'TemplateClassificationMockApiController',
			'getTemplateType',
			[
				'articleId' => $articleId,
			],
			true, \WikiaRequest::EXCEPTION_MODE_RETURN
		);
		$templateTypeKey = $response->getData()[ \TemplateClassificationMockApiController::TYPE_FIELD ];
		/* Messages generated by code below
		 * template-classification-type-unclassified
		 * template-classification-type-infobox
		 * template-classification-type-navbox
		 * template-classification-type-quote
		 */
		return wfMessage( 'template-classification-type-' . $templateTypeKey )->escaped();
	}

	/**
	 * Mock for frontend work
	 */
	private function isTemplateClassified() {
		return false;
	}

	private function renderEditButton() {
		return \Html::element( 'a', [ 'class' => 'template-classification-edit sprite-small edit', ], ' ' );
	}
}
