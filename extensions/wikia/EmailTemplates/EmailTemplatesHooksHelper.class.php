<?php
/*
 * @author Kamil Koterba
 * Helper functions for extension hook
 */

class EmailTemplatesHooksHelper {

	/**
	 * on ComposeCommonSubjectMail hook
	 * modify subject of an email
	 * @param Title $title
	 * @param Array $keys
	 * @param String $subject
	 * @param User $editor
	 * @return bool
	 */
	public function onComposeCommonSubjectMail( Title $title, &$keys, &$subject, $editor ) {
		wfProfileIn( __METHOD__ );

		if ( array_key_exists( '$ACTION', $keys) ) {
			$action = $keys['$ACTION'];

			/* modify bodyHTML for blogpost action */
			if ( $action == 'blogpost' ) {
				$oPostTitle = Title::newFromText($keys['$PAGETITLE'], NS_BLOG_ARTICLE );
				//replace $PAGETITLE with pure post title (by default it would be replaced by post title with namespace)
				$subject = str_replace( '$PAGETITLE', $oPostTitle->getSubpageText(), $subject );
			}
		}

		/* Default subject may be put here */

		wfProfileOut( __METHOD__ );
		return true;
	}


	public function onComposeCommonBodyMail(Title $title, &$keys, &$body, User $editor, &$bodyHTML, &$postTransformKeys ) {
		/* @var $wgLang Language */
		global $wgLang, $wgEnableWikiaFollowedPages, $wgEnableWikiaFollowedPagesOnlyPrefs;
		wfProfileIn( __METHOD__ );
		$app = F::app();
		if ( array_key_exists( '$ACTION', $keys) ) {
			$action = $keys['$ACTION'];

			/*
			 * modify bodyHTML for blogpost action
			 * check if Follow Ext is enabled, otherwise parameter $keys['$PAGETITLE'] that we need hasn't been initialized on MailNotifyBuildKeys hook
			*/
			if ( $action == 'blogpost'
				&& ( !empty( $wgEnableWikiaFollowedPages ) || !empty( $wgEnableWikiaFollowedPagesOnlyPrefs ) )
			) {

				$msgContentHTML = wfMsgHTMLwithLanguageAndAlternative(
					'enotif_body' . ( $action == '' ? '' : ( '_' . $action ) ),
					'enotif_body',
					$app->wg->LanguageCode
				);
				$content = $msgContentHTML[1];

				$username = $editor->getName();
				/*
				 * $title variable has wrong value. Use $keys['$PAGETITLE'] to get title of the post ($oPostTitle).
				 * $keys['$PAGETITLE'] is being generated by MailNotifyBuildKeys hook
				 */
				$oPostTitle = Title::newFromText($keys['$PAGETITLE'], NS_BLOG_ARTICLE );
				$oRevision = Revision::newFromId($oPostTitle->getLatestRevID());
				$timestamp = time();
				if ( $oRevision instanceof Revision ) {
					$timestamp = $oRevision->getTimestamp();
				}
				$date = $wgLang->date(wfTimestamp(TS_MW, $timestamp));
				/* render blog post info (avatar, author, date, title and short text) */
				$post_info_params = array(
					'language' => $app->wg->LanguageCode,
					'post_url' => $oPostTitle->getFullURL(),
					'post_title' => $oPostTitle->getSubpageText(),
					'username' => $username,
					'user_page_url' => $editor->getUserPage()->getFullURL(),
					'avatar_url' => AvatarService::renderAvatar($username, 48),
					'date' => $date,
					'short_text' => BlogTemplateClass::getShortText($oPostTitle->getArticleId(), $oRevision)
				);
				$postInfoHTML = $app->renderView( "EmailTemplates", "PostInfo", $post_info_params );
				$keys['$POST_INFO'] = $postInfoHTML;

				/* render button HTML to be replaced in body of mail */
				$button_params = array(
					'language' => $app->wg->LanguageCode,
					'link_url' => $oPostTitle->getFullURL(),
					'link_text' => wfMessage( 'read-the-whole-post' )->plain()
				);
				$buttonHTML= $app->renderView( "EmailTemplates", "Button", $button_params );
				$keys['$BUTTON'] = $buttonHTML;

				$keys['$TITLE_STYLE'] = ' style="color:#2c85d5;font-size:17px;font-weight:bold;"';

				/* render body of mail */
				$body_params = array(
					'language' => $app->wg->LanguageCode,
					'content' => $content,
				);
				$bodyHTML = $app->renderView( "EmailTemplates", "NewBlogPostMail", $body_params );
				wfProfileOut( __METHOD__ );
				return true;

			}
		}

		/* Default template may be put here */

		wfProfileOut( __METHOD__ );
		return true;
	}


}
